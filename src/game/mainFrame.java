/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package game;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JButton;
/**
 *
 * @author engeer
 */
public class mainFrame extends javax.swing.JFrame {
    defaultValues DV = new defaultValues();
    Timer timer =new Timer();
    Timer timer1 =new Timer();
    Timer timer2 =new Timer();
    
    boolean restartLevelWatcher = false;
    private int clickCounter=1;//--
    boolean firstClick=true,notDone=false,notDone2=false; 
    int j,i,x,y, b, sumAS;
    int x1 = 50,x2 = 50,y1 = 50,y2 = 50;
    
    //
    int secNorma1_1 = 30; // temp 10 should be 30
    int secHard_1 = 10;
    int secNorma1_2 = 40;
    int secHard_2 = 15;
    int secNorma1_3 = 60;
    int secHard_3 = 40;
    //
    int cardInstances = 2;
    int cardInstances1 = 3;
    int cardInstances2 = 6;
    
    //
    public int[][] cardArrayH = new int[2][2];
    public int[][] cardArrayS = new int[2][2];
    
    public int[][] cardArrayH1 = new int[3][2];
    public int[][] cardArrayS1 ={ { 1, 1 }, { 1, 1}, { 1, 1 } };
    
    public int[][] cardArrayH2 = new int[4][5];
    public int[][] cardArrayS2 ={ { 1, 1,1, 1 }, { 1, 1, 1, 1}, { 1, 1, 1, 1 } };

    public mainFrame() {
        initComponents();
        difficultyPanel.setVisible(false);
        timerPanel.setVisible(false);
        timerPanel.setToolTipText("The level fails when this timer hit zero and not all cards are solved");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        timerPanel = new javax.swing.JPanel();
        secTensDigit = new javax.swing.JLabel();
        secOnesDigit = new javax.swing.JLabel();
        togamePanel4 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        startPanel = new javax.swing.JPanel();
        playButton = new javax.swing.JButton();
        difficultyPanel = new javax.swing.JPanel();
        jButtonEasy = new javax.swing.JButton();
        jButtonNormal = new javax.swing.JButton();
        jButtonHard = new javax.swing.JButton();
        instructionPanel = new javax.swing.JPanel();
        continueToStage1Button = new javax.swing.JButton();
        gamePanel1 = new javax.swing.JPanel();
        jButtonEasy00 = new javax.swing.JButton();
        jButtonEasy01 = new javax.swing.JButton();
        jButtonEasy10 = new javax.swing.JButton();
        jButtonEasy11 = new javax.swing.JButton();
        jPanelStory_1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        gamePanel2 = new javax.swing.JPanel();
        jButtonEasyy00 = new javax.swing.JButton();
        jButtonEasyy01 = new javax.swing.JButton();
        jButtonEasyy20 = new javax.swing.JButton();
        jButtonEasyy10 = new javax.swing.JButton();
        jButtonEasyy11 = new javax.swing.JButton();
        jButtonEasyy21 = new javax.swing.JButton();
        jPanelStory_2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        gamePanel3 = new javax.swing.JPanel();
        jButtonMedium00 = new javax.swing.JButton();
        jButtonMedium10 = new javax.swing.JButton();
        jButtonMedium01 = new javax.swing.JButton();
        jButtonMedium11 = new javax.swing.JButton();
        jButtonMedium21 = new javax.swing.JButton();
        jButtonMedium20 = new javax.swing.JButton();
        jButtonMedium02 = new javax.swing.JButton();
        jButtonMedium12 = new javax.swing.JButton();
        jButtonMedium22 = new javax.swing.JButton();
        jButtonMedium03 = new javax.swing.JButton();
        jButtonMedium13 = new javax.swing.JButton();
        jButtonMedium23 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        gamePanel4 = new javax.swing.JPanel();
        o_gamePanel41 = new game.o_gamePanel4();
        jPanel12 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePanel.setBackground(new java.awt.Color(153, 0, 255));

        secTensDigit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer0.png"))); // NOI18N

        secOnesDigit.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer0.png"))); // NOI18N

        javax.swing.GroupLayout timerPanelLayout = new javax.swing.GroupLayout(timerPanel);
        timerPanel.setLayout(timerPanelLayout);
        timerPanelLayout.setHorizontalGroup(
            timerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(secTensDigit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(secOnesDigit)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        timerPanelLayout.setVerticalGroup(
            timerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timerPanelLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(timerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(secOnesDigit)
                    .addComponent(secTensDigit))
                .addGap(20, 20, 20))
        );

        togamePanel4.setText("game4");
        togamePanel4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togamePanel4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(togamePanel4)
                .addGap(26, 26, 26))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePanelLayout.createSequentialGroup()
                .addGap(0, 412, Short.MAX_VALUE)
                .addComponent(togamePanel4)
                .addGap(54, 54, 54)
                .addComponent(timerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 627));

        startPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        playButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        playButton.setForeground(new java.awt.Color(255, 0, 204));
        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        playButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        playButton.setMaximumSize(new java.awt.Dimension(100, 100));
        playButton.setMinimumSize(new java.awt.Dimension(100, 100));
        playButton.setPreferredSize(new java.awt.Dimension(100, 100));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        startPanel.add(playButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 220, 80));

        difficultyPanel.setBackground(new java.awt.Color(153, 153, 255));

        jButtonEasy.setText("Easy");
        jButtonEasy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonEasyMouseEntered(evt);
            }
        });
        jButtonEasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyActionPerformed(evt);
            }
        });

        jButtonNormal.setText("Normal");
        jButtonNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNormalActionPerformed(evt);
            }
        });

        jButtonHard.setText("Hard");
        jButtonHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout difficultyPanelLayout = new javax.swing.GroupLayout(difficultyPanel);
        difficultyPanel.setLayout(difficultyPanelLayout);
        difficultyPanelLayout.setHorizontalGroup(
            difficultyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(difficultyPanelLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(difficultyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonNormal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonHard, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEasy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        difficultyPanelLayout.setVerticalGroup(
            difficultyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(difficultyPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButtonEasy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNormal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonHard)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        startPanel.add(difficultyPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 250, 120));

        jTabbedPane1.addTab("tab1", startPanel);

        instructionPanel.setBackground(new java.awt.Color(210, 240, 240));

        continueToStage1Button.setText("Continue");
        continueToStage1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueToStage1ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout instructionPanelLayout = new javax.swing.GroupLayout(instructionPanel);
        instructionPanel.setLayout(instructionPanelLayout);
        instructionPanelLayout.setHorizontalGroup(
            instructionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, instructionPanelLayout.createSequentialGroup()
                .addContainerGap(552, Short.MAX_VALUE)
                .addComponent(continueToStage1Button)
                .addGap(41, 41, 41))
        );
        instructionPanelLayout.setVerticalGroup(
            instructionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, instructionPanelLayout.createSequentialGroup()
                .addContainerGap(587, Short.MAX_VALUE)
                .addComponent(continueToStage1Button)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab2", instructionPanel);

        gamePanel1.setBackground(new java.awt.Color(240, 210, 240));
        gamePanel1.setEnabled(false);

        jButtonEasy00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasy00.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasy00.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasy00.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasy00.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasy00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasy00ActionPerformed(evt);
            }
        });

        jButtonEasy01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasy01.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasy01.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasy01.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasy01.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasy01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasy01ActionPerformed(evt);
            }
        });

        jButtonEasy10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasy10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasy10.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasy10.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasy10.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasy10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasy10ActionPerformed(evt);
            }
        });

        jButtonEasy11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasy11.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasy11.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasy11.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasy11.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasy11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasy11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gamePanel1Layout = new javax.swing.GroupLayout(gamePanel1);
        gamePanel1.setLayout(gamePanel1Layout);
        gamePanel1Layout.setHorizontalGroup(
            gamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanel1Layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(gamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(gamePanel1Layout.createSequentialGroup()
                        .addComponent(jButtonEasy10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEasy11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gamePanel1Layout.createSequentialGroup()
                        .addComponent(jButtonEasy00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEasy01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        gamePanel1Layout.setVerticalGroup(
            gamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanel1Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addGroup(gamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonEasy01, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEasy00, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gamePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonEasy11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEasy10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", gamePanel1);

        jPanelStory_1.setBackground(new java.awt.Color(240, 210, 230));

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelStory_1Layout = new javax.swing.GroupLayout(jPanelStory_1);
        jPanelStory_1.setLayout(jPanelStory_1Layout);
        jPanelStory_1Layout.setHorizontalGroup(
            jPanelStory_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStory_1Layout.createSequentialGroup()
                .addContainerGap(618, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        jPanelStory_1Layout.setVerticalGroup(
            jPanelStory_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStory_1Layout.createSequentialGroup()
                .addContainerGap(587, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab4", jPanelStory_1);

        gamePanel2.setBackground(new java.awt.Color(40, 240, 240));

        jButtonEasyy00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasyy00.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasyy00.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy00.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy00.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasyy00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyy00ActionPerformed(evt);
            }
        });

        jButtonEasyy01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasyy01.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasyy01.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy01.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy01.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasyy01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyy01ActionPerformed(evt);
            }
        });

        jButtonEasyy20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasyy20.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasyy20.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy20.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy20.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasyy20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyy20ActionPerformed(evt);
            }
        });

        jButtonEasyy10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasyy10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasyy10.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy10.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy10.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasyy10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyy10ActionPerformed(evt);
            }
        });

        jButtonEasyy11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasyy11.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasyy11.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy11.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy11.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasyy11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyy11ActionPerformed(evt);
            }
        });

        jButtonEasyy21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonEasyy21.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonEasyy21.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy21.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonEasyy21.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonEasyy21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEasyy21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gamePanel2Layout = new javax.swing.GroupLayout(gamePanel2);
        gamePanel2.setLayout(gamePanel2Layout);
        gamePanel2Layout.setHorizontalGroup(
            gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanel2Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addGroup(gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanel2Layout.createSequentialGroup()
                        .addComponent(jButtonEasyy20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEasyy21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(gamePanel2Layout.createSequentialGroup()
                            .addComponent(jButtonEasyy10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonEasyy11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(gamePanel2Layout.createSequentialGroup()
                            .addComponent(jButtonEasyy00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonEasyy01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        gamePanel2Layout.setVerticalGroup(
            gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanel2Layout.createSequentialGroup()
                .addContainerGap(156, Short.MAX_VALUE)
                .addGroup(gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonEasyy01, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEasyy00, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonEasyy11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEasyy10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gamePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonEasyy20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEasyy21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(131, 131, 131))
        );

        jTabbedPane1.addTab("tab5", gamePanel2);

        jPanelStory_2.setBackground(new java.awt.Color(240, 40, 240));

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelStory_2Layout = new javax.swing.GroupLayout(jPanelStory_2);
        jPanelStory_2.setLayout(jPanelStory_2Layout);
        jPanelStory_2Layout.setHorizontalGroup(
            jPanelStory_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStory_2Layout.createSequentialGroup()
                .addContainerGap(618, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );
        jPanelStory_2Layout.setVerticalGroup(
            jPanelStory_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelStory_2Layout.createSequentialGroup()
                .addContainerGap(587, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab6", jPanelStory_2);

        gamePanel3.setBackground(new java.awt.Color(240, 240, 40));

        jButtonMedium00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium00.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium00.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium00.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium00.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium00ActionPerformed(evt);
            }
        });

        jButtonMedium10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium10.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium10.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium10.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium10ActionPerformed(evt);
            }
        });

        jButtonMedium01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium01.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium01.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium01.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium01.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium01ActionPerformed(evt);
            }
        });

        jButtonMedium11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium11.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium11.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium11.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium11.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium11ActionPerformed(evt);
            }
        });

        jButtonMedium21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium21.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium21.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium21.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium21.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium21ActionPerformed(evt);
            }
        });

        jButtonMedium20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium20.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium20.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium20.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium20.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium20ActionPerformed(evt);
            }
        });

        jButtonMedium02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium02.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium02.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium02.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium02.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium02ActionPerformed(evt);
            }
        });

        jButtonMedium12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium12.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium12.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium12.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium12.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium12ActionPerformed(evt);
            }
        });

        jButtonMedium22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium22.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium22.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium22.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium22.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium22ActionPerformed(evt);
            }
        });

        jButtonMedium03.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium03.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium03.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium03.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium03.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium03ActionPerformed(evt);
            }
        });

        jButtonMedium13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium13.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium13.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium13.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium13.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium13ActionPerformed(evt);
            }
        });

        jButtonMedium23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg"))); // NOI18N
        jButtonMedium23.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonMedium23.setMaximumSize(new java.awt.Dimension(100, 100));
        jButtonMedium23.setMinimumSize(new java.awt.Dimension(100, 100));
        jButtonMedium23.setPreferredSize(new java.awt.Dimension(100, 100));
        jButtonMedium23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMedium23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gamePanel3Layout = new javax.swing.GroupLayout(gamePanel3);
        gamePanel3.setLayout(gamePanel3Layout);
        gamePanel3Layout.setHorizontalGroup(
            gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanel3Layout.createSequentialGroup()
                .addContainerGap(131, Short.MAX_VALUE)
                .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanel3Layout.createSequentialGroup()
                        .addComponent(jButtonMedium20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMedium21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(gamePanel3Layout.createSequentialGroup()
                            .addComponent(jButtonMedium10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonMedium11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(gamePanel3Layout.createSequentialGroup()
                            .addComponent(jButtonMedium00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButtonMedium01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonMedium22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonMedium12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonMedium02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonMedium23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonMedium13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonMedium03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(84, 84, 84))
        );
        gamePanel3Layout.setVerticalGroup(
            gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gamePanel3Layout.createSequentialGroup()
                .addContainerGap(146, Short.MAX_VALUE)
                .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanel3Layout.createSequentialGroup()
                        .addComponent(jButtonMedium03, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMedium13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMedium23, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gamePanel3Layout.createSequentialGroup()
                        .addComponent(jButtonMedium02, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMedium12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMedium22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(gamePanel3Layout.createSequentialGroup()
                        .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonMedium01, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMedium00, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonMedium11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMedium10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(gamePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonMedium20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMedium21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(141, 141, 141))
        );

        jTabbedPane1.addTab("tab7", gamePanel3);

        jPanel10.setBackground(new java.awt.Color(20, 240, 20));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 623, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab8", jPanel10);

        javax.swing.GroupLayout o_gamePanel41Layout = new javax.swing.GroupLayout(o_gamePanel41);
        o_gamePanel41.setLayout(o_gamePanel41Layout);
        o_gamePanel41Layout.setHorizontalGroup(
            o_gamePanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        o_gamePanel41Layout.setVerticalGroup(
            o_gamePanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 623, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout gamePanel4Layout = new javax.swing.GroupLayout(gamePanel4);
        gamePanel4.setLayout(gamePanel4Layout);
        gamePanel4Layout.setHorizontalGroup(
            gamePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(o_gamePanel41, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        gamePanel4Layout.setVerticalGroup(
            gamePanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(o_gamePanel41, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab9", gamePanel4);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 669, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 623, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab10", jPanel12);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, -23, -1, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        jTabbedPane1.setSelectedComponent(gamePanel3);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       
        jTabbedPane1.setSelectedComponent(gamePanel2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void continueToStage1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueToStage1ButtonActionPerformed
        // TODO add your handling code here:

        jTabbedPane1.setSelectedComponent(gamePanel1);
    }//GEN-LAST:event_continueToStage1ButtonActionPerformed

    private void jButtonEasy00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasy00ActionPerformed
        // TODO add your handling code here:
        // @here
        if(firstClick){
            firstClickRandomizer();
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS[0][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH[0][0];     //***
            buttonImageGiver(jButtonEasy00, b);
            x1=0;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH[0][0];     //***
            buttonImageGiver(jButtonEasy00, b);
            x2=0;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare();
            sumArrayS();             
            clickCounter=1;
            }
        
    }//GEN-LAST:event_jButtonEasy00ActionPerformed

    public void sumArrayS(){ //checks the array value to know how many left to pair and if the game ends
        sumAS=0;
        for(i = 0; i<cardInstances; i++)
            {
                for(j = 0; j<cardInstances; j++)
                    {
                        sumAS+=cardArrayS[i][j];
                    }
            }
         System.out.println("Cards to match: "+ sumAS);
         if(sumAS==0){
                System.out.println("Congrats! Game Completed");
                imageClear();
                firstClick = true;
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new congratsWindow(jPanelStory_1,jTabbedPane1).setVisible(true); //--------
                    }
                });

            task.cancel(); // stop timer //--------
            setTimerImage(0, 0);
                
            }
         
    }
    public void sumArrayS1(){ //checks the array value to know how many left to pair and if the game ends
        sumAS=0;

        
        for (int[] eachRow : cardArrayS1) {
                        for (int j : eachRow) {
                                sumAS+=j;
                        }

                }
         System.out.println("Cards to match: "+ sumAS);
         if(sumAS==0){
             imageClear1();
                System.out.println("Congrats! Game Completed");
                firstClick = true;
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new congratsWindow(jPanelStory_2,jTabbedPane1).setVisible(true); //--------
                    }
                });

            task1.cancel(); // stop timer //--------
            setTimerImage(0, 0);


                
            }
         
    }
    public void sumArrayS2(){ //checks the array value to know how many left to pair and if the game ends
        sumAS=0;
//        for(i = 0; i<cardInstances; i++)
//            {
//                for(j = 0; j<cardInstances; j++)
//                    {
//                        sumAS+=cardArrayS[i][j];
//                    }
//            }
        
        for (int[] eachRow : cardArrayS2) {
                        for (int j : eachRow) {
                                sumAS+=j;
                        }
//                        System.out.println("");
                }
         System.out.println("Cards to match: "+ sumAS);
         if(sumAS==0){
             imageClear1();
                System.out.println("Congrats! Game Completed");
                firstClick = true;
//                System.out.println("total time: "+min+"min. and "+sec%60+" sec.");
//                task.cancel(); // not cancel but reset timers only

                
            }
         
    }
         
    public void ArrayHCompare(){
        if(cardArrayH[x2][y2]==cardArrayH[x1][y1]){// compares 2 user inputed coord.
               //System.out.println("well done");
               cardArrayS[x2][y2]=0;
               cardArrayS[x1][y1]=0;
           } else{
               //System.out.println("WRONG"); count error
           }
            
            timer.schedule(new TimerTask(){ // Timer to para mag show ng saglet ung second card
                
                @Override
                public void run(){
                    imageClear();
                    notDone=false;
                    notDone2=false;
                }
            },500); 
            
    }
    public void ArrayHCompare1(){
        if(cardArrayH1[x2][y2]==cardArrayH1[x1][y1]){// compares 2 user inputed coord.
               //System.out.println("well done");
               cardArrayS1[x2][y2]=0;
               cardArrayS1[x1][y1]=0;
           } else{
               //System.out.println("WRONG"); count error
           }
            
            timer.schedule(new TimerTask(){ // Timer to para mag show ng saglet ung second card
                
                @Override
                public void run(){
                    imageClear1();
                    notDone=false;
                    notDone2=false;
                }
            },500); 
            
    }
    public void ArrayHCompare2(){
        try{
        if(cardArrayH2[x2][y2]==cardArrayH2[x1][y1]){// compares 2 user inputed coord.
               //System.out.println("well done");
               cardArrayS2[x2][y2]=0;
               cardArrayS2[x1][y1]=0;
           } else{
               //System.out.println("WRONG"); count error
           }
        }catch(Exception e){
            System.out.println("error "+ e);
        }
            
            timer.schedule(new TimerTask(){ // Timer to para mag show ng saglet ung second card
                
                @Override
                public void run(){
                    imageClear2();
                    notDone=false;
                    notDone2=false;
                }
            },500); 
            
    }
    
    public void imageClear(){

        switch(cardArrayS[0][0]){
            case 1:
                jButtonEasy00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasy00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        switch(cardArrayS[0][1]){
            case 1:
                jButtonEasy01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasy01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        
      
        switch(cardArrayS[1][0]){
            case 1:
                jButtonEasy10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasy10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS[1][1]){
            case 1:
                jButtonEasy11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasy11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        
    }
    public void imageClear1(){

        switch(cardArrayS1[0][0]){
            case 1:
                jButtonEasyy00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasyy00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        switch(cardArrayS1[0][1]){
            case 1:
                jButtonEasyy01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasyy01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        
      
        switch(cardArrayS1[1][0]){
            case 1:
                jButtonEasyy10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasyy10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS1[1][1]){
            case 1:
                jButtonEasyy11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasyy11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS1[2][0]){
            case 1:
                jButtonEasyy20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasyy20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS1[2][1]){
            case 1:
                jButtonEasyy21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonEasyy21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        
    }  
    public void imageClear2(){

        switch(cardArrayS2[0][0]){
            case 1:
                jButtonMedium00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium00.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        switch(cardArrayS2[0][1]){
            case 1:
                jButtonMedium01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        
      
        switch(cardArrayS2[1][0]){
            case 1:
                jButtonMedium10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS2[1][1]){
            case 1:
                jButtonMedium11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS2[2][0]){
            case 1:
                jButtonMedium20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS2[2][1]){
            case 1:
                jButtonMedium21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
            switch(cardArrayS2[0][2]){
            case 1:
                jButtonMedium02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
        switch(cardArrayS2[0][3]){
            case 1:
                jButtonMedium03.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium03.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;      
        }
//        -------------------------
      
        switch(cardArrayS2[1][2]){
            case 1:
                jButtonMedium12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS2[1][3]){
            case 1:
                jButtonMedium13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS2[2][2]){
            case 1:
                jButtonMedium22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        switch(cardArrayS2[2][3]){
            case 1:
                jButtonMedium23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@back.jpg")));
                break;
            case 0:
                jButtonMedium23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/@solve.jpg")));
                break;     
        }
        
    }     
    public void buttonImageGiver(JButton a , int b){
        switch(b){
            case 1:
//                a.setIcon(imagea);
                a.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/01.jpg")));
                break;
            case 2:
//                a.setIcon(imageb);
                a.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/02.jpg")));
                break;
            case 3:
//                a.setIcon(imageb);
                a.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/03.jpg")));
                break;
            case 4:
//                a.setIcon(imagea);
                a.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/04.jpg")));
                break;
            case 5:
//                a.setIcon(imageb);
                a.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/05.jpg")));
                break;
            case 6:
//                a.setIcon(imageb);
                a.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/06.jpg")));
                break;
        }
    }
    public void firstClickRandomizer(){
        for (i=0;i<=cardInstances;i++){
                for(;;){                                    //first coordinate
                    x=(int)(Math.random()*2);
                    y=(int)(Math.random()*2);
                   if(cardArrayH[x][y]==0){
                       cardArrayH[x][y]=i;
                       break;
                   }else{
                       //System.out.println(x+" "+y);   
                   }
                }
                    for(;;){                                    //2nd coordinate but same value
                        x=(int)(Math.random()*2);
                        y=(int)(Math.random()*2);
                       if(cardArrayH[x][y]==0){
                           cardArrayH[x][y]=i;
                           break;
                       }else{
                           //System.out.println(x+" "+y);   
                       }
                    }
            }
        for(i=0;i<cardInstances;i++){
            for(j=0;j<cardInstances;j++){
                System.out.print(cardArrayH[i][j]+" ");
                }
            System.out.println(" ");
            }
         System.out.println(" ");
         for(i = 0; i<cardInstances; i++){
            for(j = 0; j<cardInstances; j++){
                cardArrayS [i][j]=1;
                System.out.print(cardArrayS[i][j]+" ");
                }
            System.out.println();
        }
        secNorma1_1 = DV.getDsecNorma1_1();;
        secHard_1 = DV.getDsecHard_1();;
        try{
        timer.scheduleAtFixedRate(task, 1000,1000); 
        }catch(Exception e){
            System.out.println("not the first");
        }
    }   
    public void firstClickRandomizer1(){
        for (i=0;i<=cardInstances1;i++){
                for(;;){                                    //first coordinate
                    x=(int)(Math.random()*3);
                    y=(int)(Math.random()*2);
                    
                   if(cardArrayH1[x][y]==0){
                       cardArrayH1[x][y]=i;
                       System.out.println(x+ " "+ y);
                       break;
                   }else{
                       //System.out.println(x+" "+y);   
                   }
                }
                    for(;;){                                    //2nd coordinate but same value
                        x=(int)(Math.random()*3);
                        y=(int)(Math.random()*2);
//                        System.out.println(x+ " "+ y);
                       if(cardArrayH1[x][y]==0){
                           cardArrayH1[x][y]=i;
                           System.out.println(x+ " "+ y);
                           break;
                       }else{
                           //System.out.println(x+" "+y);   
                       }
                    }
            }
        for(i=0;i<3;i++){
            for(j=0;j<2;j++){
                System.out.print(cardArrayH1[i][j]+" ");
                }
            System.out.println(" ");
            }
         System.out.println(" ");

        
        for (int[] eachRow : cardArrayS1) {
                        for (int j : eachRow) {
                                
                                System.out.print(j + "\t");
                        }
                        System.out.println("");
                        
                }
        secNorma1_2 = DV.getDsecNorma1_2();
        secHard_2 = DV.getDsecHard_2();
        try{
        timer1.scheduleAtFixedRate(task1, 1000,1000); }
        catch(Exception e){
            
        }
   
    }
    public void firstClickRandomizer2(){
        for (i=0;i<=cardInstances2;i++){
                for(;;){                                    //first coordinate
                    x=(int)(Math.random()*3);
                    y=(int)(Math.random()*4);
                    
                   if(cardArrayH2[x][y]==0){
                       cardArrayH2[x][y]=i;
//                       System.out.println(x+ " "+ y);
                       break;
                   }else{
                       //System.out.println(x+" "+y);   
                   }
                }
                    for(;;){                                    //2nd coordinate but same value
                        x=(int)(Math.random()*3);
                        y=(int)(Math.random()*4);
//                        System.out.println(x+ " "+ y);
                       if(cardArrayH2[x][y]==0){
                           cardArrayH2[x][y]=i;
//                           System.out.println(x+ " "+ y);
                           break;
                       }else{
                           //System.out.println(x+" "+y);   
                       }
                    }
            }
        for(i=0;i<3;i++){
            for(j=0;j<4;j++){
                System.out.print(cardArrayH2[i][j]+" ");
                }
            System.out.println(" ");
            }
         System.out.println(" ");
//         for(i = 0; i<2; i++){
//            for(j = 0; j<3; j++){
//                cardArrayS [i][j]=1;
//                System.out.print(cardArrayS1[i][j]+" ");
//                }
//            System.out.println();
//        }
        
        for (int[] eachRow : cardArrayS2) {
                        for (int j : eachRow) {
                                
                                System.out.print(j + "\t");
                        }
                        System.out.println("");
                        
                }
        timer2.scheduleAtFixedRate(task2, 1000,1000); 
   
    }
    TimerTask task = new TimerTask(){ // timer ng oras
        public void run(){
            currentSettings cSettings = currentSettings.getInstance();
            
            int diff = cSettings.getDifficulty();
            switch (diff) {
                case 2:
                    {
                        // Normal
                        timerPanel.setVisible(true);
                        int ones = secNorma1_1% 10; //--------
                        int tens = secNorma1_1 /10; //--------
                        if (restartLevelWatcher){
                            setTimerImage(0, 0);
                        }else{
                            setTimerImage(ones, tens);
                        }       // Out of time Scenario Restarting Level
                        if(secNorma1_1==0){      //--------
                            resetGame();
                            imageClear();
                            levelFailedWindow();
                        }       secNorma1_1 --; //--------
                        break;
                    }
                case 3:
                    {
                        //Hard
                        timerPanel.setVisible(true);
                        int ones = secHard_1% 10; //--------
                        int tens = secHard_1 /10; //--------
                        setTimerImage(ones, tens);
                        // Out of time Scenario Restarting Level
                        if(secHard_1==0){          //--------
                            resetGame();
                            imageClear(); //--------
                            levelFailedWindow();
                        }       secHard_1 --; //--------
                        break;
                    }
                default:
                    timerPanel.setVisible(false);
                    break;
            }
        }
};
    TimerTask task1 = new TimerTask(){ // timer ng oras
        public void run(){
//            System.out.println("timer");
//            
            currentSettings cSettings = currentSettings.getInstance();
            
            int diff = cSettings.getDifficulty();
            switch (diff) {
                case 2:// Normal
                    {
                        
                        timerPanel.setVisible(true);
                        int ones = secNorma1_2% 10;
                        int tens = secNorma1_2 /10;
                        if (restartLevelWatcher){
                            setTimerImage(0, 0);
                        }else{
                            setTimerImage(ones, tens);
                        }       // Out of time Scenario Restarting Level
                        if(secNorma1_2==0){
                            resetGame1();
                            imageClear1();
                            levelFailedWindow();
                        }       secNorma1_2 --;
                        break;
                    }
                case 3://Hard
                    {
                        
                        timerPanel.setVisible(true);
                        int ones = secHard_2% 10;
                        int tens = secHard_2 /10;
                        setTimerImage(ones, tens);
                        // Out of time Scenario Restarting Level
                        if(secHard_2==0){
                            resetGame1();
                            imageClear1();
                            levelFailedWindow();
                        }       secHard_2 --;
                        break;
                    }
                default:
                    timerPanel.setVisible(false);
                    break;
            }
        }
    };
    TimerTask task2 = new TimerTask(){ // timer ng oras
        public void run(){
            System.out.println("timer");
//            sec++;
//            System.out.println("seconds"+ sec);
//            if(sec<=9){
//                secTimer.setText(String.valueOf("0"+sec%60));
//            }else{secTimer.setText(String.valueOf(sec%60));}
//            min= sec/60;
//            if(min<=9){
//                minTimer.setText(String.valueOf("0"+min));
//            }else{minTimer.setText(String.valueOf(min));}
            
        }
};
    
    public void resetGame(){
        setTimerImage(0,0);
        cardArrayH = new int[2][2];
        cardArrayS = new int[2][2];
        firstClick=true;
        notDone=false;
        notDone2=false; 
        clickCounter=1;
        x1 = 50;x2 = 50;y1 = 50;y2 = 50;
        for(i = 0; i<cardInstances; i++){ // resetting summaryArray
            for(j = 0; j<cardInstances; j++){
                cardArrayS [i][j]=1;
            }
        }
    }
        
    public void resetGame1(){
        setTimerImage(0,0);
        cardArrayH1 = new int[3][2]; // -------
//        this.cardArrayS1 = { { 1, 1 }, { 1, 1}, { 1, 1 } }
//          RESETING THE Solution Array
        resetCardArrayS1();
 // ------
        firstClick=true;
        notDone=false;
        notDone2=false; 
        clickCounter=1;
        x1 = 50;x2 = 50;y1 = 50;y2 = 50;
//        for(i = 0; i<cardInstances; i++){ // resetting summaryArray
//            for(j = 0; j<cardInstances; j++){
//                cardArrayS [i][j]=1;
//            }
//        }
    }
    
    public void resetCardArrayS1(){
        for (int[] cardArrayS11 : cardArrayS1) {
            for (int[] cardArrayS12 : cardArrayS1) {
////                cardArrayS1[row][col] = 1;
            }
        }
    }
    public void levelFailedWindow(){
        java.awt.EventQueue.invokeLater(new Runnable() {// prompt to restart or quit
                        public void run() {
                            new levelFailedWindow(jTabbedPane1,difficultyPanel,playButton).setVisible(true);
                        }
                    });
    }
    
    public void setTimerImage(int ones , int tens ){
        switch (ones){
            case 0:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer0.png")));
                break;
            case 1:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer1.png")));
                break;
            case 2:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer2.png")));
                break;
            case 3:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer3.png")));
                break;
            case 4:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer4.png")));
                break;
            case 5:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer5.png")));
                break;
            case 6:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer6.png")));
                break;
            case 7:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer7.png")));
                break;
            case 8:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer8.png")));
                break;
            case 9:
                secOnesDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer9.png")));
                break;
        }
        switch (tens){
            case 0:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer0.png")));
                break;
            case 1:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer1.png")));
                break;
            case 2:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer2.png")));
                break;
            case 3:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer3.png")));
                break;
            case 4:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer4.png")));
                break;
            case 5:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer5.png")));
                break;
            case 6:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer6.png")));
                break;
            case 7:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer7.png")));
                break;
            case 8:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer8.png")));
                break;
            case 9:
                secTensDigit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timer9.png")));
                break;
        }
        
    }
        
    private void jButtonEasy01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasy01ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            firstClickRandomizer();
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS[0][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            b =cardArrayH[0][1];     //***
            buttonImageGiver(jButtonEasy01, b);       //***
            x1=0;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            b =cardArrayH[0][1];     //***
            buttonImageGiver(jButtonEasy01, b);  //***
            x2=0;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare();
            sumArrayS();             
            clickCounter=1;
            }
    }//GEN-LAST:event_jButtonEasy01ActionPerformed

    private void jButtonEasy10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasy10ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            firstClickRandomizer();
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS[1][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            b =cardArrayH[1][0];     //***
            buttonImageGiver(jButtonEasy10, b);       //***
            x1=1;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            b =cardArrayH[1][0];     //***
            buttonImageGiver(jButtonEasy10, b);  //***
            x2=1;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare();
            sumArrayS();             
            clickCounter=1;
            }
    }//GEN-LAST:event_jButtonEasy10ActionPerformed

    private void jButtonEasy11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasy11ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            firstClickRandomizer();
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS[1][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            b =cardArrayH[1][1];     //***
            buttonImageGiver(jButtonEasy11, b);       //***
            x1=1;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            b =cardArrayH[1][1];     //***
            buttonImageGiver(jButtonEasy11, b);  //***
            x2=1;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare();
            sumArrayS();             
            clickCounter=1;
            }
    }//GEN-LAST:event_jButtonEasy11ActionPerformed

    private void jButtonEasyy10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyy10ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer1();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS1[1][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH1[1][0];     //***
            buttonImageGiver(jButtonEasyy10, b);
            x1=1;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH1[1][0];     //***
            buttonImageGiver(jButtonEasyy10, b);
            x2=1;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare1();
            sumArrayS1();             
            clickCounter=1;
            }
   
    }//GEN-LAST:event_jButtonEasyy10ActionPerformed

    private void jButtonEasyy00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyy00ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer1();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS1[0][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH1[0][0];     //***
            buttonImageGiver(jButtonEasyy00, b);
            x1=0;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH1[0][0];     //***
            buttonImageGiver(jButtonEasyy00, b);
            x2=0;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare1();
            sumArrayS1();             
            clickCounter=1;
            }
        
    }//GEN-LAST:event_jButtonEasyy00ActionPerformed

    private void jButtonEasyy01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyy01ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer1();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS1[0][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH1[0][1];     //***
            buttonImageGiver(jButtonEasyy01, b);
            x1=0;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH1[0][1];     //***
            buttonImageGiver(jButtonEasyy01, b);
            x2=0;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare1();
            sumArrayS1();             
            clickCounter=1;
            }
   
    }//GEN-LAST:event_jButtonEasyy01ActionPerformed

    private void jButtonEasyy11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyy11ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer1();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS1[1][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH1[1][1];     //***
            buttonImageGiver(jButtonEasyy11, b);
            x1=1;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH1[1][1];     //***
            buttonImageGiver(jButtonEasyy11, b);
            x2=1;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare1();
            sumArrayS1();             
            clickCounter=1;
            }
   
    }//GEN-LAST:event_jButtonEasyy11ActionPerformed

    private void jButtonEasyy20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyy20ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer1();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS1[2][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==2 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH1[2][0];     //***
            buttonImageGiver(jButtonEasyy20, b);
            x1=2;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH1[2][0];     //***
            buttonImageGiver(jButtonEasyy20, b);
            x2=2;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare1();
            sumArrayS1();             
            clickCounter=1;
            }
   
    }//GEN-LAST:event_jButtonEasyy20ActionPerformed

    private void jButtonEasyy21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyy21ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer1();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS1[2][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==2 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH1[2][1];     //***
            buttonImageGiver(jButtonEasyy21, b);
            x1=2;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH1[2][1];     //***
            buttonImageGiver(jButtonEasyy21, b);
            x2=2;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare1();
            sumArrayS1();             
            clickCounter=1;
            }
   
    }//GEN-LAST:event_jButtonEasyy21ActionPerformed

    private void jButtonMedium00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium00ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[0][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[0][0];     //***
            buttonImageGiver(jButtonMedium00, b);//***
            x1=0;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[0][0];     //***
            buttonImageGiver(jButtonMedium00, b);//***
            x2=0;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium00ActionPerformed

    private void jButtonMedium10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium10ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[1][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[1][0];     //***
            buttonImageGiver(jButtonMedium10, b);//***
            x1=1;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[1][0];     //***
            buttonImageGiver(jButtonMedium10, b);//***
            x2=1;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium10ActionPerformed

    private void jButtonMedium01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium01ActionPerformed
        // TODO add your handling code here:
        
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[0][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[0][1];     //***
            buttonImageGiver(jButtonMedium01, b);//***
            x1=0;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[0][1];     //***
            buttonImageGiver(jButtonMedium01, b);//***
            x2=0;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium01ActionPerformed

    private void jButtonMedium11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium11ActionPerformed
        // TODO add your handling code here:
        
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[1][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[1][1];     //***
            buttonImageGiver(jButtonMedium11, b);//***
            x1=1;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[1][1];     //***
            buttonImageGiver(jButtonMedium11, b);//***
            x2=1;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium11ActionPerformed

    private void jButtonMedium21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium21ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[2][1]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==2 && y1==1){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[2][1];     //***
            buttonImageGiver(jButtonMedium21, b);//***
            x1=2;                                 //***
            y1=1;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[2][1];     //***
            buttonImageGiver(jButtonMedium21, b);//***
            x2=2;                                 //*** 
            y2=1;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium21ActionPerformed

    private void jButtonMedium20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium20ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[2][0]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==2 && y1==0){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[2][0];     //***
            buttonImageGiver(jButtonMedium20, b);//***
            x1=2;                                 //***
            y1=0;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[2][0];     //***
            buttonImageGiver(jButtonMedium20, b);//***
            x2=2;                                 //*** 
            y2=0;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium20ActionPerformed

    private void jButtonMedium02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium02ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[0][2]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==2){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[0][2];     //***
            buttonImageGiver(jButtonMedium02, b);//***
            x1=0;                                 //***
            y1=2;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[0][2];     //***
            buttonImageGiver(jButtonMedium02, b);//***
            x2=0;                                 //*** 
            y2=2;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium02ActionPerformed

    private void jButtonMedium12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium12ActionPerformed
        // TODO add your handling code here:
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[1][2]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==2){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[1][2];     //***
            buttonImageGiver(jButtonMedium12, b);//***
            x1=1;                                 //***
            y1=2;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[1][2];     //***
            buttonImageGiver(jButtonMedium12, b);//***
            x2=1;                                 //*** 
            y2=2;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium12ActionPerformed

    private void jButtonMedium22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium22ActionPerformed
        // TODO add your handling code here:
        
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[2][2]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==2 && y1==2){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[2][2];     //***
            buttonImageGiver(jButtonMedium22, b);//***
            x1=2;                                 //***
            y1=2;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[2][2];     //***
            buttonImageGiver(jButtonMedium22, b);//***
            x2=2;                                 //*** 
            y2=2;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium22ActionPerformed

    private void jButtonMedium03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium03ActionPerformed
        // TODO add your handling code here:
        
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[0][3]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==0 && y1==3){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[0][3];     //***
            buttonImageGiver(jButtonMedium03, b);//***
            x1=0;                                 //***
            y1=3;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[0][3];     //***
            buttonImageGiver(jButtonMedium03, b);//***
            x2=0;                                 //*** 
            y2=3;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium03ActionPerformed

    private void jButtonMedium13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium13ActionPerformed
        // TODO add your handling code here:
        
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[1][3]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==1 && y1==3){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[1][3];     //***
            buttonImageGiver(jButtonMedium13, b);//***
            x1=3;                                 //***
            y1=3;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[1][3];     //***
            buttonImageGiver(jButtonMedium13, b);//***
            x2=1;                                 //*** 
            y2=3;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium13ActionPerformed

    private void jButtonMedium23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMedium23ActionPerformed
        // TODO add your handling code here:
        
        if(firstClick){
            
            firstClickRandomizer2();
            
            //System.out.println("check check22");
            firstClick = false;
        }
        if(cardArrayS2[2][3]==0 ){                 //***
            System.out.println("this card is already done"); // error counting ?
        }else if(x1==2 && y1==3){                 //***
            System.out.println("this is your 1st choice pick another card"); // error counting ?
        }else if(notDone==true && notDone2==true){                           //prevent actions while pairing
            System.out.println("di pa tpos mag compute sandali naman");
        }else if(clickCounter==1){
            notDone= true;
            clickCounter=2;
            
            b =cardArrayH2[2][3];     //***
            buttonImageGiver(jButtonMedium23, b);//***
            x1=2;                                 //***
            y1=3;                                 //***
            System.out.println("1st choice");
        }else{
            
            notDone2= true;
            
            
            b =cardArrayH2[2][3];     //***
            buttonImageGiver(jButtonMedium23, b);//***
            x2=2;                                 //*** 
            y2=3;                                 //***  
            System.out.println("2nd choice");
                
            ArrayHCompare2();
            sumArrayS2();             
            clickCounter=1;
            }
    
    }//GEN-LAST:event_jButtonMedium23ActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        // TODO add your handling code here:
        jButtonEasy.setToolTipText("Play in easy mode. There are no Time limits in every level");
        jButtonNormal.setToolTipText("Play in normal mode. The time is adequate enough to finish the levels");
        jButtonHard.setToolTipText("Play in hard mode. Each card must be paired with minimal errors to finish the game within the time limit.");
        difficultyPanel.setVisible(true);
        playButton.setVisible(false);
    }//GEN-LAST:event_playButtonActionPerformed

    private void jButtonEasyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEasyMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButtonEasyMouseEntered

    private void jButtonEasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEasyActionPerformed
        // TODO add your handling code here:
        currentSettings cSettings = currentSettings.getInstance();
        cSettings.setDifficulty(1);

        jTabbedPane1.setSelectedComponent(instructionPanel);
    }//GEN-LAST:event_jButtonEasyActionPerformed

    private void jButtonNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNormalActionPerformed
        // TODO add your handling code here:
        currentSettings cSettings = currentSettings.getInstance();
        cSettings.setDifficulty(2);
        
        jTabbedPane1.setSelectedComponent(instructionPanel);
    }//GEN-LAST:event_jButtonNormalActionPerformed

    private void jButtonHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHardActionPerformed
        // TODO add your handling code here:
        currentSettings cSettings = currentSettings.getInstance();
        cSettings.setDifficulty(3);
        
        jTabbedPane1.setSelectedComponent(instructionPanel);
    }//GEN-LAST:event_jButtonHardActionPerformed

    private void togamePanel4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togamePanel4ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedComponent(gamePanel4);
    }//GEN-LAST:event_togamePanel4ActionPerformed

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new mainFrame().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton continueToStage1Button;
    private javax.swing.JPanel difficultyPanel;
    private javax.swing.JPanel gamePanel1;
    private javax.swing.JPanel gamePanel2;
    private javax.swing.JPanel gamePanel3;
    private javax.swing.JPanel gamePanel4;
    private javax.swing.JPanel instructionPanel;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonEasy;
    private javax.swing.JButton jButtonEasy00;
    private javax.swing.JButton jButtonEasy01;
    private javax.swing.JButton jButtonEasy10;
    private javax.swing.JButton jButtonEasy11;
    private javax.swing.JButton jButtonEasyy00;
    private javax.swing.JButton jButtonEasyy01;
    private javax.swing.JButton jButtonEasyy10;
    private javax.swing.JButton jButtonEasyy11;
    private javax.swing.JButton jButtonEasyy20;
    private javax.swing.JButton jButtonEasyy21;
    private javax.swing.JButton jButtonHard;
    private javax.swing.JButton jButtonMedium00;
    private javax.swing.JButton jButtonMedium01;
    private javax.swing.JButton jButtonMedium02;
    private javax.swing.JButton jButtonMedium03;
    private javax.swing.JButton jButtonMedium10;
    private javax.swing.JButton jButtonMedium11;
    private javax.swing.JButton jButtonMedium12;
    private javax.swing.JButton jButtonMedium13;
    private javax.swing.JButton jButtonMedium20;
    private javax.swing.JButton jButtonMedium21;
    private javax.swing.JButton jButtonMedium22;
    private javax.swing.JButton jButtonMedium23;
    private javax.swing.JButton jButtonNormal;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanelStory_1;
    private javax.swing.JPanel jPanelStory_2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private game.o_gamePanel4 o_gamePanel41;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel secOnesDigit;
    private javax.swing.JLabel secTensDigit;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JPanel startPanel;
    private javax.swing.JPanel timerPanel;
    private javax.swing.JButton togamePanel4;
    // End of variables declaration//GEN-END:variables
}
